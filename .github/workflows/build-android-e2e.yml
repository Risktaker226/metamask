name: Build Android E2E APKs (Ultra-Extreme)

on:
  workflow_call:
    inputs:
      build_type:
        description: "The type of build to perform"
        required: false
        default: "main"
        type: string
      metamask_environment:
        description: "The environment to build for (qa/live)"
        required: false
        default: "qa"
        type: string

jobs:
  build-android-apks:
    name: Ultra-Extreme Android APK Build
    runs-on: ubuntu-22.04

    steps:
      - name: 🧭 Checkout repository
        uses: actions/checkout@v4

      - name: ☕ Install Java 17
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: ⚙️ Install Android SDK
        run: |
          export ANDROID_SDK_ROOT=/usr/local/lib/android/sdk
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          cd "$ANDROID_SDK_ROOT/cmdline-tools"
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O sdk-tools.zip
          unzip -q sdk-tools.zip -d tools
          mv tools "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          rm sdk-tools.zip
          export PATH=$PATH:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools
          yes | sdkmanager --licenses || true
          sdkmanager --update || true
          sdkmanager "platform-tools" "build-tools;34.0.0" "platforms;android-34"

      - name: 🔑 Generate temporary keystore
        run: |
          mkdir -p android/app
          rm -f android/app/debug.keystore || true
          keytool -genkeypair -v \
            -keystore android/app/debug.keystore \
            -storepass android -keypass android \
            -keyalg RSA -keysize 2048 -validity 10000 \
            -alias androiddebugkey \
            -dname "CN=Android Debug,O=Android,C=US"

      - name: 📦 Cache Gradle & Node Modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            node_modules
          key: gradle-node-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/yarn.lock') }}

      - name: 📦 Install JS dependencies
        run: yarn install --frozen-lockfile

      - name: 🛠️ Patch all modules & fix native errors
        run: |
          echo "🛠️ Patching all deprecated Gradle compile() calls..."
          find node_modules -type f -name "build.gradle" -exec sed -i 's/compile /implementation /g' {} +

          echo "🛠️ Forcing compileSdkVersion >= 35 / targetSdkVersion >= 35..."
          find node_modules -type f -name "build.gradle" -exec sed -i \
            -e 's/compileSdkVersion [0-9]\+/compileSdkVersion 35/g' \
            -e 's/targetSdkVersion [0-9]\+/targetSdkVersion 35/g' {} +

          echo "🛠️ Forcing Java 17 compatibility..."
          find node_modules -type f -name "build.gradle" -exec sed -i \
            -e '/sourceCompatibility/s/=.*/= JavaVersion.VERSION_17/' \
            -e '/targetCompatibility/s/=.*/= JavaVersion.VERSION_17/' {} +

          echo "🛠️ Fixing Kotlin unresolved references for React Native modules..."
          find android/app/src/main/java/io -type f -name "*.kt" -exec sed -i \
            's/ReactApplicationContext/ReactContext/g; s/NativeModule/BaseJavaModule/g; s/Promise/com.facebook.react.bridge.Promise/g' {} +

          echo "🛠️ Adding manifest placeholders if missing..."
          PLACEHOLDERS="MM_BRANCH_KEY_LIVE=live_key_dummy,MM_BRANCH_KEY_TEST=test_key_dummy,isDebug=false"
          if [ "${{ inputs.metamask_environment }}" = "qa" ]; then
            PLACEHOLDERS="MM_BRANCH_KEY_LIVE=qa_live_key,MM_BRANCH_KEY_TEST=qa_test_key,isDebug=true"
          fi
          grep -q "manifestPlaceholders" android/app/build.gradle || \
          sed -i "/defaultConfig {/a \
              \ \ \ \ manifestPlaceholders = [\
              \ \ \ \ \ \ ${PLACEHOLDERS//,/\\,\\\ }\
              \ \ \ \ ]" android/app/build.gradle

          echo "🛠️ Cleaning Gradle & Node modules..."
          cd android
          ./gradlew clean
          cd ..

      - name: 🛠️ Patch deprecated Gradle features in node_modules
        run: |
          echo "🛠️ Applying Gradle 9 ready patch..."
          find node_modules -type f -name "build.gradle" -exec sed -i 's/^\s*compile /implementation /g' {} +
          find node_modules -type f -name "build.gradle" -exec sed -i \
            -e '/sourceCompatibility/s/=.*/= JavaVersion.VERSION_17/' \
            -e '/targetCompatibility/s/=.*/= JavaVersion.VERSION_17/' {} +
          find node_modules -type f -name "build.gradle" -exec sed -i \
            -e 's/compileSdkVersion [0-9]\+/compileSdkVersion 35/g' \
            -e 's/targetSdkVersion [0-9]\+/targetSdkVersion 35/g' {} +
          echo "🛠️ Node modules patched successfully."

      - name: 🛠️ Proguard, Detox & Hermes Gradle 9 fixes
        run: |
          echo "🛠️ Applying Proguard & Hermes fixes for Gradle 9..."
          # Detox
          grep -q "# Detox Gradle 9 fix" android/app/proguard-rules.pro || \
          echo -e "\n# Detox Gradle 9 fix\n-keep class com.wix.** { *; }\n-dontwarn com.wix.**" >> android/app/proguard-rules.pro
          # Sentry
          grep -q "# Sentry Gradle 9 fix" android/app/proguard-rules.pro || \
          echo -e "\n# Sentry Gradle 9 fix\n-keep class io.sentry.** { *; }\n-dontwarn io.sentry.**" >> android/app/proguard-rules.pro
          # Hermes Java 17
          find android/app/src/main/java -type f -name "*.java" -exec sed -i 's/JavaVersion.VERSION_1.8/JavaVersion.VERSION_17/g' {} +
          echo "🛠️ Proguard, Detox, Sentry and Hermes ready for Gradle 9."

      - name: 🏗️ Build Release APK only
        run: |
          cd android
          ./gradlew assembleRelease --no-daemon --parallel --configure-on-demand --build-cache
          cd ..

      - name: 📤 Upload Release APK only
        uses: actions/upload-artifact@v4
        with:
          name: android-apks-release
          path: android/app/build/outputs/apk/release/*.apk
